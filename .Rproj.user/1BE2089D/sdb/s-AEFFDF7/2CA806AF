{
    "contents" : "#Write a function named 'getmonitor' that takes three arguments: 'id', 'directory', and 'summarize'. Given a monitor ID number, 'getmonitor' reads that monitor's particulate matter data from the directory specified in the 'directory' argument and returns a data frame containing that monitor's data. If 'summarize = TRUE', then 'getmonitor' produces a summary of the data frame with the 'summary' function and prints it to the console. A prototype of the function is as follows\ngetmonitor <- function(id, directory, summarize = FALSE) {\n  ## 'id' is a vector of length 1 indicating the monitor ID\n  ## number. The user can specify 'id' as either an integer, a\n  ## character, or a numeric.\n  id=as.numeric(id)\n  ## 'directory' is a character vector of length 1 indicating\n  ## the location of the CSV files\n  \n  ## 'summarize' is a logical indicating whether a summary of\n  ## the data should be printed to the console; the default is\n  ## FALSE\n  \n  ## Your code here\n}\n#You can see some example output from this function. The function that you write should be able to match this output. Please save your code to a file named getmonitor.R. To run the test script for this part, make sure your working directory has the file getmonitor.R in it and the run\nsource(\"http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R\")\ngetmonitor.testscript()",
    "created" : 1380736214623.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2765347468",
    "id" : "2CA806AF",
    "lastKnownWriteTime" : 1380738909,
    "path" : "~/GitHub/Coursera-Computing-for-Data-Analysis-R/Week 1/getmonitor.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}